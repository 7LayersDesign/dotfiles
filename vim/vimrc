" ===============================================
" Vim Config
" Andy Hutchins
" Modified 07-05-2013
" ===============================================


" Set Vim to not be compatible with vi. This is better
set nocompatible
" Sets the default color scheme and color format
set t_Co=256
colorscheme tm_cobalt

" Set Vim to use BASH isntead of ZSH
set shell=/bin/bash
" Set leader to ,
let mapleader = ","

" Nerdtree
    map <F3> :NERDTreeToggle<CR>
    autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | endif

" Powerline
    set guifont=Inconsolata\ for\ Powerline
    let g:Powerline_symbols = 'fancy'
" }}}

" Add if/elsif/else/end switching
runtime macros/matchit.vim

" Fire up pathogen and file indentation
call pathogen#infect("~/dotfiles/vim/bundles")
filetype plugin indent on

" Turns on syntax higlighting
syntax on
syntax enable

" Turns on line numbers
set number

" Highlight current line
set cursorline

" Supposed to set linebreaks on spaces and not break words across lines
set linebreak

" Sets antialiasing on by default
set antialias

" Ever notice a slight lag after typing the leader key + command? This lowers the timeout.
set timeoutlen=500

" Text stuff
set tabstop=2
set softtabstop=2
set shiftwidth=2
set guifont=EssentialPragmataPro:h16
set smartindent
set smarttab
set autoindent
set expandtab
set autoread


"Searching
set hlsearch
set incsearch
set ignorecase
set smartcase

"==================================================
" => Keyboard Mappings
"==================================================

" Ctrl-n will disable search highlighting
nmap <silent> <C-n> :noh<CR>

" Toggle trailing spaces and tabs
set listchars=tab:>-,trail:Â·,eol:$
nmap <silent> <leader>s :set nolist!<CR>

" Use pre v1.3 EasyMotion leader
let g:EasyMotion_leader_key = '<Leader><Leader>'

" Fast saving
nmap <leader>w :w!<cr>

" Fast editing of the .vimrc
map <leader>v :e! ~/.vimrc<cr>

" When vimrc is edited, reload it automatically
autocmd! bufwritepost vimrc source ~/.vimrc

"==================================================
" => GUI Configuration
"==================================================
" Set Vim to always show the position of the cursor on the bottom right corner
set ruler
" Allow persistant background buffers w/o disk-write
set hidden
" Status Bar
set laststatus=2
" Omnicomplete Setup
set wildmenu
set wildmode=list:longest,list:full
" 3 line buffer at window edges
set scrolloff=3
" Remove MacVim menu and toolbar and scrollbars
set guioptions-=T " Remove MacVim toolbar
set guioptions-=L " Remove Left scroll bar
set guioptions-=r " Remove right scrollbars
set guioptions+=a " Autoselect. Visual mode selections available outside MacVim
set guioptions+=c " Use console for simple alerts instead of GUI popup
:set guitablabel=%N\ %f " Set tab label to Tab # and buffer

" Put Vim backup files somewhere else
set backupdir=~/.vim/tmp,~/.tmp,~/tmp,~/var/tmp,/tmp
set directory=~/.vim/tmp,~/.tmp,~/tmp,~/var/tmp,/tmp

" Increase scrolling to 3 lines at a time
nnoremap <C-e> 3<C-e>
nnoremap <C-y> 3<C-y>

set cmdheight=3 " Set command lines count
set cmdwinheight=5 " Set command window height
" File edited outside Vim auto-refresh in Vim
set autoread

" Map ;; to <esc>
inoremap ;; <esc>

" Disable blinking cursor
set gcr=n:blinkon0

" This should set the window to open maximized.
if has("gui_running")
  " GUI is running or is about to start.
  " Maximize gvim window.
  set lines=999 columns=999
endif

" Setup indent folding
" set foldmethod=indent

" Open NERDTree on Vim load, and move cursor back to opened file
autocmd VimEnter * NERDTree
autocmd VimEnter * wincmd p

" Remap ` to '
nnoremap ' `
nnoremap ` '

" Longer history
set history=1000

" Turn on visual bell, No beeping :)
set visualbell

"The commandbar height
set cmdheight=2

"Ignore case when searching
set ignorecase

"Set magic on, for regular expressions
set magic
"Show matching bracets when text indicator is over them
set showmatch
"How many tenths of a second to blink
set mat=2

" Turn backup off, since most stuff is in SVN, git anyway...
set nobackup
set nowb
set noswapfile

" Setup PHP Documentation Lookup using simple bash script
set keywordprg=/Users/161751/bin/php/php_doc

" Set F5 to pop up quick buffer browser
:nnoremap <F5> :buffers<CR>:buffer<Space>

" Show syntax highlighting groups for word under cursor
nmap <C-S-P> :call <SID>SynStack()<CR>
function! <SID>SynStack()
  if !exists("*synstack")
    return
  endif
  echo map(synstack(line('.'), col('.')), 'synIDattr(v:val, "name")')
endfunc

